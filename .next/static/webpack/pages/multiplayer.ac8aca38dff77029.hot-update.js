"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/multiplayer",{

/***/ "./contexts/MultiplayerContext.js":
/*!****************************************!*\
  !*** ./contexts/MultiplayerContext.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultiplayerProvider: function() { return /* binding */ MultiplayerProvider; },\n/* harmony export */   useMultiplayerContext: function() { return /* binding */ useMultiplayerContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n// Estado inicial\nconst initialState = {\n    roomCode: \"\",\n    playerNickname: \"\",\n    lobbyData: null,\n    isLoading: false,\n    error: \"\",\n    isConnected: false,\n    currentScreen: \"lobby\" // 'lobby' | 'game'\n};\n// Actions\nconst ACTIONS = {\n    SET_ROOM_CODE: \"SET_ROOM_CODE\",\n    SET_PLAYER_NICKNAME: \"SET_PLAYER_NICKNAME\",\n    SET_LOBBY_DATA: \"SET_LOBBY_DATA\",\n    SET_LOADING: \"SET_LOADING\",\n    SET_ERROR: \"SET_ERROR\",\n    SET_CONNECTED: \"SET_CONNECTED\",\n    SET_CURRENT_SCREEN: \"SET_CURRENT_SCREEN\",\n    RESET: \"RESET\"\n};\n// Reducer\nfunction multiplayerReducer(state, action) {\n    switch(action.type){\n        case ACTIONS.SET_ROOM_CODE:\n            return {\n                ...state,\n                roomCode: action.payload\n            };\n        case ACTIONS.SET_PLAYER_NICKNAME:\n            return {\n                ...state,\n                playerNickname: action.payload\n            };\n        case ACTIONS.SET_LOBBY_DATA:\n            return {\n                ...state,\n                lobbyData: action.payload\n            };\n        case ACTIONS.SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case ACTIONS.SET_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case ACTIONS.SET_CONNECTED:\n            return {\n                ...state,\n                isConnected: action.payload\n            };\n        case ACTIONS.SET_CURRENT_SCREEN:\n            return {\n                ...state,\n                currentScreen: action.payload\n            };\n        case ACTIONS.RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n// Context\nconst MultiplayerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n// Provider\nfunction MultiplayerProvider(param) {\n    let { children } = param;\n    _s();\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(multiplayerReducer, initialState);\n    // Polling para atualizar o estado da sala\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83D\\uDD04 CONTEXT - useEffect polling:\", {\n            roomCode: state.roomCode,\n            isConnected: state.isConnected\n        });\n        if (!state.roomCode || !state.isConnected) {\n            console.log(\"\\uD83D\\uDD04 CONTEXT - Polling n\\xe3o iniciado - faltam dados\");\n            return;\n        }\n        const pollLobby = async ()=>{\n            console.log(\"\\uD83D\\uDD04 CONTEXT - Fazendo polling para sala:\", state.roomCode);\n            try {\n                const response = await fetch(\"/api/lobby?roomCode=\".concat(state.roomCode));\n                if (response.ok) {\n                    const data = await response.json();\n                    console.log(\"\\uD83D\\uDD04 CONTEXT - Dados recebidos:\", data);\n                    dispatch({\n                        type: ACTIONS.SET_LOBBY_DATA,\n                        payload: data\n                    });\n                } else {\n                    const errorData = await response.json();\n                    console.log(\"\\uD83D\\uDD04 CONTEXT - Erro na resposta:\", errorData);\n                    dispatch({\n                        type: ACTIONS.SET_ERROR,\n                        payload: errorData.error || \"Erro ao buscar dados da sala\"\n                    });\n                }\n            } catch (err) {\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Erro de conex\\xe3o:\", err);\n                dispatch({\n                    type: ACTIONS.SET_ERROR,\n                    payload: \"Erro de conex\\xe3o\"\n                });\n            }\n        };\n        // Poll inicial\n        console.log(\"\\uD83D\\uDD04 CONTEXT - Iniciando polling...\");\n        pollLobby();\n        // Poll a cada 2 segundos\n        const interval = setInterval(pollLobby, 2000);\n        return ()=>{\n            console.log(\"\\uD83D\\uDD04 CONTEXT - Parando polling\");\n            clearInterval(interval);\n        };\n    }, [\n        state.roomCode,\n        state.isConnected\n    ]);\n    // Actions\n    const actions = {\n        setRoomCode: (roomCode)=>dispatch({\n                type: ACTIONS.SET_ROOM_CODE,\n                payload: roomCode\n            }),\n        setPlayerNickname: (nickname)=>dispatch({\n                type: ACTIONS.SET_PLAYER_NICKNAME,\n                payload: nickname\n            }),\n        setLobbyData: (data)=>dispatch({\n                type: ACTIONS.SET_LOBBY_DATA,\n                payload: data\n            }),\n        setLoading: (loading)=>dispatch({\n                type: ACTIONS.SET_LOADING,\n                payload: loading\n            }),\n        setError: (error)=>dispatch({\n                type: ACTIONS.SET_ERROR,\n                payload: error\n            }),\n        setConnected: (connected)=>dispatch({\n                type: ACTIONS.SET_CONNECTED,\n                payload: connected\n            }),\n        setCurrentScreen: (screen)=>dispatch({\n                type: ACTIONS.SET_CURRENT_SCREEN,\n                payload: screen\n            }),\n        reset: ()=>dispatch({\n                type: ACTIONS.RESET\n            }),\n        // Criar sala\n        createRoom: async (playerNickname)=>{\n            dispatch({\n                type: ACTIONS.SET_LOADING,\n                payload: true\n            });\n            dispatch({\n                type: ACTIONS.SET_ERROR,\n                payload: \"\"\n            });\n            try {\n                const response = await fetch(\"/api/lobby\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        nickname: playerNickname\n                    })\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    console.log(\"\\uD83D\\uDD04 CONTEXT - Resposta createRoom:\", data);\n                    dispatch({\n                        type: ACTIONS.SET_ROOM_CODE,\n                        payload: data.roomCode\n                    });\n                    dispatch({\n                        type: ACTIONS.SET_PLAYER_NICKNAME,\n                        payload: playerNickname\n                    });\n                    dispatch({\n                        type: ACTIONS.SET_CONNECTED,\n                        payload: true\n                    });\n                    // Buscar dados completos da sala\n                    const lobbyResponse = await fetch(\"/api/lobby?roomCode=\".concat(data.roomCode));\n                    if (lobbyResponse.ok) {\n                        const lobbyData = await lobbyResponse.json();\n                        dispatch({\n                            type: ACTIONS.SET_LOBBY_DATA,\n                            payload: lobbyData\n                        });\n                    }\n                    return data;\n                } else {\n                    const errorData = await response.json();\n                    console.log(\"\\uD83D\\uDD04 CONTEXT - Erro createRoom:\", errorData);\n                    dispatch({\n                        type: ACTIONS.SET_ERROR,\n                        payload: errorData.error || \"Erro ao criar sala\"\n                    });\n                    throw new Error(errorData.error);\n                }\n            } catch (err) {\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Erro de conex\\xe3o createRoom:\", err);\n                dispatch({\n                    type: ACTIONS.SET_ERROR,\n                    payload: \"Erro de conex\\xe3o\"\n                });\n                throw err;\n            } finally{\n                dispatch({\n                    type: ACTIONS.SET_LOADING,\n                    payload: false\n                });\n            }\n        },\n        // Entrar na sala\n        joinRoom: async (roomCode, playerNickname)=>{\n            console.log(\"\\uD83D\\uDD04 CONTEXT - joinRoom chamado:\", {\n                roomCode,\n                playerNickname\n            });\n            dispatch({\n                type: ACTIONS.SET_LOADING,\n                payload: true\n            });\n            dispatch({\n                type: ACTIONS.SET_ERROR,\n                payload: \"\"\n            });\n            try {\n                const requestBody = {\n                    roomCode,\n                    nickname: playerNickname\n                };\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Request body:\", requestBody);\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Request body JSON:\", JSON.stringify(requestBody));\n                const response = await fetch(\"/api/lobby\", {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(requestBody)\n                });\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Response status:\", response.status);\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Response ok:\", response.ok);\n                if (response.ok) {\n                    const data = await response.json();\n                    console.log(\"\\uD83D\\uDD04 CONTEXT - Response data:\", data);\n                    dispatch({\n                        type: ACTIONS.SET_ROOM_CODE,\n                        payload: roomCode\n                    });\n                    dispatch({\n                        type: ACTIONS.SET_PLAYER_NICKNAME,\n                        payload: playerNickname\n                    });\n                    dispatch({\n                        type: ACTIONS.SET_LOBBY_DATA,\n                        payload: data\n                    });\n                    dispatch({\n                        type: ACTIONS.SET_CONNECTED,\n                        payload: true\n                    });\n                    return data;\n                } else {\n                    const errorData = await response.json();\n                    console.log(\"\\uD83D\\uDD04 CONTEXT - Error data:\", errorData);\n                    dispatch({\n                        type: ACTIONS.SET_ERROR,\n                        payload: errorData.error || \"Erro ao entrar na sala\"\n                    });\n                    throw new Error(errorData.error);\n                }\n            } catch (err) {\n                console.log(\"\\uD83D\\uDD04 CONTEXT - Catch error:\", err);\n                dispatch({\n                    type: ACTIONS.SET_ERROR,\n                    payload: \"Erro de conex\\xe3o\"\n                });\n                throw err;\n            } finally{\n                dispatch({\n                    type: ACTIONS.SET_LOADING,\n                    payload: false\n                });\n            }\n        },\n        // Iniciar jogo\n        startGame: async ()=>{\n            if (!state.roomCode) return;\n            dispatch({\n                type: ACTIONS.SET_LOADING,\n                payload: true\n            });\n            dispatch({\n                type: ACTIONS.SET_ERROR,\n                payload: \"\"\n            });\n            try {\n                const response = await fetch(\"/api/lobby\", {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        roomCode: state.roomCode,\n                        action: \"start\"\n                    })\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    dispatch({\n                        type: ACTIONS.SET_LOBBY_DATA,\n                        payload: data\n                    });\n                    dispatch({\n                        type: ACTIONS.SET_CURRENT_SCREEN,\n                        payload: \"game\"\n                    });\n                    return data;\n                } else {\n                    const errorData = await response.json();\n                    dispatch({\n                        type: ACTIONS.SET_ERROR,\n                        payload: errorData.error || \"Erro ao iniciar jogo\"\n                    });\n                    throw new Error(errorData.error);\n                }\n            } catch (err) {\n                dispatch({\n                    type: ACTIONS.SET_ERROR,\n                    payload: \"Erro de conex\\xe3o\"\n                });\n                throw err;\n            } finally{\n                dispatch({\n                    type: ACTIONS.SET_LOADING,\n                    payload: false\n                });\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MultiplayerContext.Provider, {\n        value: {\n            state,\n            actions\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"E:\\\\Bandle\\\\contexts\\\\MultiplayerContext.js\",\n        lineNumber: 232,\n        columnNumber: 5\n    }, this);\n}\n_s(MultiplayerProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = MultiplayerProvider;\n// Hook para usar o contexto\nfunction useMultiplayerContext() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MultiplayerContext);\n    if (!context) {\n        throw new Error(\"useMultiplayerContext deve ser usado dentro de MultiplayerProvider\");\n    }\n    return context;\n}\n_s1(useMultiplayerContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"MultiplayerProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/MultiplayerContext.js\n"));

/***/ })

});